# -*- coding: utf-8 -*-
"""car invertory system.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L4HQGYYYFBsjd8531DwzB5LOmIFTiND2
"""

print('\n\tCAR INVETORY SYSTEM\t\n')
class carinvetory:

    def __init__(self):
        self.make = " "
        self.model = " "
        self.color = " "
        self.year = 0
        self.mileage=0


    def addvehicle(self):
        self.year = int(input("Enter year: "))
        self.make = input("Enter make: ")
        self.model = input("Enter model: ")
        self.color = input("Enter color: ")
        self.mileage=int(input("Enter mileage:"))

    def __str__(self):
        return('%d %s %s Color: %s Mileage:%d ' %( self.year, self.make, self.model, self. color,self.mileage))

vehiclelist = []

def edit(vehiclelist):
    pos = int(input('Enter the position of the vehicle to edit: '))
    newvehicle = car.addvehicle()
    newvehicle = car.__str__()
    vehiclelist[pos-1] = newvehicle
    print('Vehicle was updated')

a=True
while a:
    print ("""
    1.Add a Vehicle
    2.Remove a Vehicle
    3.Display Vehicle
    4.Update a Vehicle
    5.Quit
    """)
    b=input("Enter a choose ") 
    if b=="1": 
        car = carinvetory()
        car.addvehicle()
        vehiclelist.append(car.__str__())

    elif b=="2":
        for i in vehiclelist:
            vehiclelist.pop(int(input('Enter position of vehicle to remove: ')))
            print('Successfully removed vehicle')
    elif b=="3":
        print(vehiclelist)
    elif b=="4":
        edit(vehiclelist)
    else:
        print('try again')